name: release

on:
  workflow_dispatch:
  push:
    branches:
      - master
  #pull_request:
    #branches:
      #- master

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v4.2.2
      with:
        submodules: 'recursive'
        fetch-depth: '0'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3.2.0
      with:
        log-accepted-android-sdk-licenses: false
        cmdline-tools-version: '12266719'
        packages: 'platforms;android-35 build-tools;35.0.0 platform-tools'

    - name: Install NDK
      run: |
        echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
          --channel=3 \
          --install "ndk;29.0.13113456"
        echo "NDK_HOME=$ANDROID_HOME/ndk/29.0.13113456" >> $GITHUB_ENV
        sed -i '10i\
        \
            ndkVersion = "29.0.13113456"' ${{ github.workspace }}/V2rayNG/app/build.gradle.kts

    - name: Restore cached libtun2socks
      id: cache-libtun2socks-restore
      uses: actions/cache/restore@v4
      with:
        path: ${{ github.workspace }}/libs
        key: libtun2socks-${{ runner.os }}-${{ env.NDK_HOME }}-${{ hashFiles('.git/modules/badvpn/HEAD') }}-${{ hashFiles('.git/modules/libancillary/HEAD') }}

    - name: Build libtun2socks
      if: steps.cache-libtun2socks-restore.outputs.cache-hit != 'true'
      run: |
        bash compile-tun2socks.sh

    - name: Save libtun2socks
      if: steps.cache-libtun2socks-restore.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: ${{ github.workspace }}/libs
        key: libtun2socks-${{ runner.os }}-${{ env.NDK_HOME }}-${{ hashFiles('.git/modules/badvpn/HEAD') }}-${{ hashFiles('.git/modules/libancillary/HEAD') }}

    - name: Copy libtun2socks
      run: |
        cp -r ${{ github.workspace }}/libs ${{ github.workspace }}/V2rayNG/app

    - name: Restore cached libhysteria2
      id: cache-libhysteria2-restore
      uses: actions/cache/restore@v4
      with:
        path: ${{ github.workspace }}/hysteria/libs
        key: libhysteria2-${{ runner.os }}-${{ env.NDK_HOME }}-${{ hashFiles('.git/modules/hysteria/HEAD') }}-${{ hashFiles('libhysteria2.sh') }}

    - name: Setup Golang
      if: steps.cache-libhysteria2-restore.outputs.cache-hit != 'true'
      uses: actions/setup-go@v5.4.0
      with:
        go-version-file: 'AndroidLibXrayLite/go.mod'
        cache: false

    - name: Build libhysteria2
      if: steps.cache-libhysteria2-restore.outputs.cache-hit != 'true'
      run: |
        bash libhysteria2.sh

    - name: Save libhysteria2
      if: steps.cache-libhysteria2-restore.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: ${{ github.workspace }}/hysteria/libs
        key: libhysteria2-${{ runner.os }}-${{ env.NDK_HOME }}-${{ hashFiles('.git/modules/hysteria/HEAD') }}-${{ hashFiles('libhysteria2.sh') }}

    - name: Copy libhysteria2
      run: |
        cp -r ${{ github.workspace }}/hysteria/libs ${{ github.workspace }}/V2rayNG/app

    - name: Setup Java
      uses: actions/setup-java@v4.7.0
      with:
        distribution: 'temurin'
        java-version: '21'
    
    - name: Build Release
      env:
        KEYSTORE_PATH: "../key.jks"
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      run: |
        cd V2rayNG/app/libs
        rm -f libv2ray.aar
        wget -O libv2ray.aar https://github.com/Herfv/AndroidLibXrayLite/releases/download/release/libv2ray.aar
        cd ../..
        sed -i 's/org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8/org.gradle.jvmargs=-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8/' ${{ github.workspace }}/V2rayNG/gradle.properties
        chmod +x ./gradlew
        echo "ndk.dir=${ANDROID_NDK_HOME}" >> local.properties
        ./gradlew assembleRelease
    
    - uses: actions/upload-artifact@v4.6.2
      with:
        name: APKs
        path: /home/runner/work/v2rayNG/v2rayNG/V2rayNG/app/build/outputs/apk/*/release/*.apk

    - name: Upload apk to release
      uses: softprops/action-gh-release@v1
      with:
        tag: ${{ github.ref_name }}
        tag_name: release
        files: /home/runner/work/v2rayNG/v2rayNG/V2rayNG/app/build/outputs/apk/*/release/*.apk
